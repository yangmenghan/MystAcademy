apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'

def config = new Properties()
config.load(new FileInputStream(rootProject.file('config.properties')))

task downloadGraphQLSchema {
  def endPoint = config['graphqlEndPoint']
  def header = config['graphqlHeader']
  def localPath = 'src/main/graphql/com/mystacademy/android/schema.json'

  exec {
    commandLine 'apollo', 'schema:download', localPath,
        '--endpoint=' + endPoint, '--header', header
  }
}

apollo {
  useSemanticNaming = true
  customTypeMapping['DateTime'] = "String"
}

def getVersionCode = { ->
  def ciBuildNumber = System.getenv("BITRISE_BUILD_NUMBER")
  def defaultCiBuildNumber = 0
  ciBuildNumber = ciBuildNumber ? ciBuildNumber : defaultCiBuildNumber
  return ciBuildNumber.toInteger()
}

def getVersionName = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'describe', '--tags'
    standardOutput = stdout
  }
  return stdout.toString().trim()
}



android {
  compileSdkVersion 26
  defaultConfig {
    applicationId "com.mystacademy.android"
    minSdkVersion 19
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary = true
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  buildTypes {
    release {
      debuggable = false
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      multiDexEnabled true
    }

    debug {
      debuggable = true
    }
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'com.android.support:appcompat-v7:26.1.0'
  implementation 'com.android.support:design:26.1.0'
  implementation 'com.android.support.constraint:constraint-layout:1.1.0'
  implementation 'com.android.support:support-vector-drawable:26.1.0'
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'


  // Network
  implementation 'com.apollographql.apollo:apollo-runtime:1.0.0-alpha2'
  implementation "com.apollographql.apollo:apollo-android-support:1.0.0-alpha2"
  implementation 'com.squareup.okhttp3:okhttp:3.10.0'

  // Logging
  implementation 'com.jakewharton.timber:timber:4.7.0'
  implementation 'com.github.simonpercic:oklog3:2.3.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

  // Architecture
  implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
  implementation "io.reactivex.rxjava2:rxjava:2.1.14"

  // Dagger
  implementation 'com.google.dagger:dagger:2.16'
  annotationProcessor 'com.google.dagger:dagger-compiler:2.16'

  implementation 'com.google.dagger:dagger-android:2.16'
  implementation 'com.google.dagger:dagger-android-support:2.16'
  annotationProcessor 'com.google.dagger:dagger-android-processor:2.16'

  // Graphics
  implementation "io.reactivex.rxjava2:rxjava:2.1.14"
  implementation 'com.github.bumptech.glide:glide:4.3.1'

  // Debug
  debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
  releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

  // Dagger ?
  //
}
